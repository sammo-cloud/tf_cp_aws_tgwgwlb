{
  "version": 4,
  "terraform_version": "0.14.8",
  "serial": 78,
  "lineage": "664c5c9c-aae6-a27b-faf4-ea699079a5ab",
  "outputs": {
    "output": {
      "value": "com.amazonaws.vpce.ap-east-1.vpce-svc-0db739642ffc90351",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "aws_instance",
      "name": "ins_management",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "ami": "ami-0aea74a88de7a68f1",
            "arn": "arn:aws:ec2:ap-east-1:438588710834:instance/i-020b64963744b451b",
            "associate_public_ip_address": true,
            "availability_zone": "ap-east-1a",
            "credit_specification": [],
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "filter": [
              {
                "name": "tag:Name",
                "values": [
                  "FWD5-gwlb-management-server"
                ]
              }
            ],
            "get_password_data": false,
            "get_user_data": false,
            "host_id": null,
            "iam_instance_profile": "FWD5-GWLB-TgwGwlbStack-14SQ0DLS0N8AH-GWLBStack-QU45138XCD5X-ManagementStack-6Q8ZDZ3QFFT1-InstanceProfile-BAOLDZ1P0UFZ",
            "id": "i-020b64963744b451b",
            "instance_id": null,
            "instance_state": "running",
            "instance_tags": null,
            "instance_type": "m5.large",
            "key_name": "FWD5 TPOT Key",
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional"
              }
            ],
            "monitoring": false,
            "network_interface_id": "eni-0e234c62ae025142a",
            "outpost_arn": "",
            "password_data": null,
            "placement_group": "",
            "private_dns": "ip-10-0-10-79.ap-east-1.compute.internal",
            "private_ip": "10.0.10.79",
            "public_dns": "ec2-16-162-35-10.ap-east-1.compute.amazonaws.com",
            "public_ip": "16.162.35.10",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/xvda",
                "encrypted": true,
                "iops": 300,
                "kms_key_id": "arn:aws:kms:ap-east-1:438588710834:key/f60565fb-f7f5-4b83-a74f-5fd31a8862f2",
                "tags": {},
                "throughput": 0,
                "volume_id": "vol-0c0453b1a301508e7",
                "volume_size": 100,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "subnet_id": "subnet-0e974bce9abd15266",
            "tags": {
              "Name": "FWD5-gwlb-management-server"
            },
            "tenancy": "default",
            "user_data": "a3115a22c18ff338a76fd7e8e913e9d10927711e",
            "user_data_base64": null,
            "vpc_security_group_ids": [
              "sg-0bc46d35ee54104b4"
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_cloudformation_stack",
      "name": "checkpoint_gwlb_cloudformation_stack",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "capabilities": [
              "CAPABILITY_IAM"
            ],
            "disable_rollback": true,
            "iam_role_arn": "",
            "id": "arn:aws:cloudformation:ap-east-1:438588710834:stack/FWD5-GWLB/56230f10-a953-11eb-8465-0afda06a3b66",
            "name": "FWD5-GWLB",
            "notification_arns": null,
            "on_failure": null,
            "outputs": {
              "ConfigurationTemplateName": "FWD5-gwlb-ASG-configuration",
              "ControllerName": "gwlb-controller",
              "GWLBName": "FWD5-gwlb1",
              "GWLBServiceName": "com.amazonaws.vpce.ap-east-1.vpce-svc-0db739642ffc90351",
              "ManagementPublicAddress": "16.162.35.10",
              "TgwSubnet1CIDR": "10.0.12.0/24",
              "TgwSubnet1ID": "subnet-0c3cd5eb52e2557ea",
              "TgwSubnet2CIDR": "10.0.22.0/24",
              "TgwSubnet2ID": "subnet-05478448babb4cb08",
              "VPCID": "vpc-002fc4b054674b7c0"
            },
            "parameters": {
              "AdminCIDR": "0.0.0.0/0",
              "AllowUploadDownload": "true",
              "AvailabilityZones": "ap-east-1a,ap-east-1b",
              "ConfigurationTemplate": "FWD5-gwlb-ASG-configuration",
              "ControlGatewayOverPrivateOrPublicAddress": "private",
              "GWLBName": "FWD5-gwlb1",
              "GWLBeSubnet1CIDR": "10.0.14.0/24",
              "GWLBeSubnet2CIDR": "10.0.24.0/24",
              "GWLBeSubnet3CIDR": "10.0.34.0/24",
              "GWLBeSubnet4CIDR": "10.0.44.0/24",
              "GatewayInstanceType": "c5.large",
              "GatewayManagement": "Locally managed",
              "GatewayName": "FWD5-gwlb-gw",
              "GatewayPasswordHash": "****",
              "GatewaySICKey": "****",
              "GatewayVersion": "R80.40-BYOL",
              "GatewaysAddresses": "0.0.0.0/0",
              "GatewaysMaxSize": "10",
              "GatewaysMinSize": "2",
              "GatewaysPolicy": "Standard",
              "KeyName": "FWD5 TPOT Key",
              "ManagementDeploy": "true",
              "ManagementInstanceType": "m5.large",
              "ManagementPasswordHash": "****",
              "ManagementServer": "FWD5-gwlb-management-server",
              "ManagementVersion": "R80.40-BYOL",
              "NatGwSubnet1CIDR": "10.0.13.0/24",
              "NatGwSubnet2CIDR": "10.0.23.0/24",
              "NatGwSubnet3CIDR": "10.0.33.0/24",
              "NatGwSubnet4CIDR": "10.0.43.0/24",
              "NumberOfAZs": "2",
              "PublicSubnet1CIDR": "10.0.10.0/24",
              "PublicSubnet2CIDR": "10.0.20.0/24",
              "PublicSubnet3CIDR": "10.0.30.0/24",
              "PublicSubnet4CIDR": "10.0.40.0/24",
              "Shell": "/bin/bash",
              "TargetGroupName": "FWD5-tg1",
              "TgwSubnet1CIDR": "10.0.12.0/24",
              "TgwSubnet2CIDR": "10.0.22.0/24",
              "TgwSubnet3CIDR": "10.0.32.0/24",
              "TgwSubnet4CIDR": "10.0.42.0/24",
              "VPCCIDR": "10.0.0.0/16"
            },
            "policy_body": null,
            "policy_url": null,
            "tags": null,
            "template_body": "AWSTemplateFormatVersion: 2010-09-09\nDescription: Deploy a Gateway Load Balancer, Check Point CloudGuard IaaS Security Gateway Auto Scaling Group, and optionally a Security Management Server, Gateway Load Balancer Endpoints and NAT Gateways for each AZ, in a new VPC for Transit Gateway (20210411)\nMetadata:\n  AWS::CloudFormation::Interface:\n    ParameterGroups:\n      - Label:\n          default: VPC Network Configuration\n        Parameters:\n          - AvailabilityZones\n          - NumberOfAZs\n          - VPCCIDR\n          - PublicSubnet1CIDR\n          - PublicSubnet2CIDR\n          - PublicSubnet3CIDR\n          - PublicSubnet4CIDR\n          - TgwSubnet1CIDR\n          - TgwSubnet2CIDR\n          - TgwSubnet3CIDR\n          - TgwSubnet4CIDR\n          - NatGwSubnet1CIDR\n          - NatGwSubnet2CIDR\n          - NatGwSubnet3CIDR\n          - NatGwSubnet4CIDR\n          - GWLBeSubnet1CIDR\n          - GWLBeSubnet2CIDR\n          - GWLBeSubnet3CIDR\n          - GWLBeSubnet4CIDR\n      - Label:\n          default: General Settings\n        Parameters:\n          - KeyName\n          - EnableVolumeEncryption\n          - EnableInstanceConnect\n          - AllowUploadDownload\n          - ManagementServer\n          - ConfigurationTemplate\n          - AdminEmail\n          - Shell\n      - Label:\n          default: Gateway Load Balancer Configuration\n        Parameters:\n          - GWLBName\n          - TargetGroupName\n          - CrossZoneLoadBalancing\n      - Label:\n          default: Check Point CloudGuard IaaS Security Gateways Auto Scaling Group Configuration\n        Parameters:\n          - GatewayName\n          - GatewayInstanceType\n          - GatewaysMinSize\n          - GatewaysMaxSize\n          - GatewayVersion\n          - GatewayPasswordHash\n          - GatewaySICKey\n          - ControlGatewayOverPrivateOrPublicAddress\n          - CloudWatch\n      - Label:\n          default: Check Point CloudGuard IaaS Security Management Server Configuration\n        Parameters:\n          - ManagementDeploy\n          - ManagementInstanceType\n          - ManagementVersion\n          - ManagementPasswordHash\n          - GatewaysPolicy\n          - AdminCIDR\n          - GatewayManagement\n          - GatewaysAddresses\n    ParameterLabels:\n      AvailabilityZones:\n        default: Availability Zones\n      NumberOfAZs:\n        default: Number of AZs\n      VPCCIDR:\n        default: VPC CIDR\n      PublicSubnet1CIDR:\n        default: Public subnet 1 CIDR\n      PublicSubnet2CIDR:\n        default: Public subnet 2 CIDR\n      PublicSubnet3CIDR:\n        default: Public subnet 3 CIDR\n      PublicSubnet4CIDR:\n        default: Public subnet 4 CIDR\n      TgwSubnet1CIDR:\n        default: TGW subnet 1 CIDR\n      TgwSubnet2CIDR:\n        default: TGW subnet 2 CIDR\n      TgwSubnet3CIDR:\n        default: TGW subnet 3 CIDR\n      TgwSubnet4CIDR:\n        default: TGW subnet 4 CIDR\n      NatGwSubnet1CIDR:\n        default: NAT subnet 1 CIDR\n      NatGwSubnet2CIDR:\n        default: NAT subnet 2 CIDR\n      NatGwSubnet3CIDR:\n        default: NAT subnet 3 CIDR\n      NatGwSubnet4CIDR:\n        default: NAT subnet 4 CIDR\n      GWLBeSubnet1CIDR:\n        default: Gateway Load Balancer Endpoint subnet 1 CIDR\n      GWLBeSubnet2CIDR:\n        default: Gateway Load Balancer Endpoint subnet 2 CIDR\n      GWLBeSubnet3CIDR:\n        default: Gateway Load Balancer Endpoint subnet 3 CIDR\n      GWLBeSubnet4CIDR:\n        default: Gateway Load Balancer Endpoint subnet 4 CIDR\n      KeyName:\n        default: Key name\n      EnableVolumeEncryption:\n        default: Enable environment volume encryption\n      EnableInstanceConnect:\n        default: Enable AWS Instance Connect\n      AllowUploadDownload:\n        default: Allow upload \u0026 download\n      ManagementServer:\n        default: Management Server\n      ConfigurationTemplate:\n        default: Configuration template\n      AdminEmail:\n        default: Email address\n      Shell:\n        default: Admin shell\n      GWLBName:\n        default: Gateway Load Balancer Name\n      TargetGroupName:\n        default: Target Group Name\n      CrossZoneLoadBalancing:\n        default:  Enable Cross Zone Load Balancing\n      GatewayName:\n        default: Gateways instance name\n      GatewayInstanceType:\n        default: Gateways instance type\n      GatewaysMinSize:\n        default: Minimum group size\n      GatewaysMaxSize:\n        default: Maximum group size\n      GatewayVersion:\n        default: Gateways version \u0026 license\n      GatewayPasswordHash:\n        default: Gateways Password hash\n      GatewaySICKey:\n        default: Gateways SIC key\n      ControlGatewayOverPrivateOrPublicAddress:\n        default: Gateways addresses\n      CloudWatch:\n        default: CloudWatch metrics\n      ManagementDeploy:\n        default: Deploy Management Server\n      ManagementInstanceType:\n        default: Management instance type\n      ManagementVersion:\n        default: Management version \u0026 license\n      ManagementPasswordHash:\n        default: Management password hash\n      GatewaysPolicy:\n        default: Security Policy\n      AdminCIDR:\n        default: Administrator addresses\n      GatewayManagement:\n        default: Manage Gateways\n      GatewaysAddresses:\n        default: Gateways addresses\nParameters:\n  AvailabilityZones:\n    Description: The Availability Zones (AZs) to use for the subnets in the VPC. Select two (the logical order is preserved)\n    Type: List\u003cAWS::EC2::AvailabilityZone::Name\u003e\n    MinLength: 2\n  NumberOfAZs:\n    Description: Number of Availability Zones to use in the VPC. This must match your selections in the list of Availability Zones parameter\n    Type: Number\n    Default: 2\n    MinValue: 2\n    MaxValue: 4\n  VPCCIDR:\n    Description: The CIDR block of the provided VPC.\n    Type: String\n    Default: 10.0.0.0/16\n    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$'\n    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28\n  PublicSubnet1CIDR:\n    Description: CIDR block for public subnet 1 located in the 1st Availability Zone\n    Type: String\n    Default: 10.0.10.0/24\n    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$'\n    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28\n  PublicSubnet2CIDR:\n    Description: CIDR block for public subnet 2 located in the 2nd Availability Zone\n    Type: String\n    Default: 10.0.20.0/24\n    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$'\n    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28\n  PublicSubnet3CIDR:\n    Description: CIDR block for public subnet 3 located in the 3rd Availability Zone\n    Type: String\n    Default: 10.0.30.0/24\n    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$'\n    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28\n  PublicSubnet4CIDR:\n    Description: CIDR block for public subnet 4 located in the 4th Availability Zone\n    Type: String\n    Default: 10.0.40.0/24\n    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$'\n    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28\n  TgwSubnet1CIDR:\n    Description: CIDR block for TGW subnet 1 located in the 1st Availability Zone\n    Type: String\n    Default: 10.0.12.0/24\n    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$'\n    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28\n  TgwSubnet2CIDR:\n    Description: CIDR block for TGW subnet 2 located in the 2nd Availability Zone\n    Type: String\n    Default: 10.0.22.0/24\n    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28\n  TgwSubnet3CIDR:\n    Description: CIDR block for TGW subnet 3 located in the 3rd Availability Zone\n    Type: String\n    Default: 10.0.32.0/24\n    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$'\n    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28\n  TgwSubnet4CIDR:\n    Description: CIDR block for TGW subnet 4 located in the 4th Availability Zone\n    Type: String\n    Default: 10.0.42.0/24\n    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28\n  NatGwSubnet1CIDR:\n    Description: CIDR block for NAT subnet 1 located in the 1st Availability Zone\n    Type: String\n    Default: 10.0.13.0/24\n    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$'\n    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28\n  NatGwSubnet2CIDR:\n    Description: CIDR block for NAT subnet 2 located in the 2nd Availability Zone\n    Type: String\n    Default: 10.0.23.0/24\n    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28\n  NatGwSubnet3CIDR:\n    Description: CIDR block for NAT subnet 3 located in the 3rd Availability Zone\n    Type: String\n    Default: 10.0.33.0/24\n    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$'\n    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28\n  NatGwSubnet4CIDR:\n    Description: CIDR block for NAT subnet 4 located in the 4th Availability Zone\n    Type: String\n    Default: 10.0.43.0/24\n    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28\n  GWLBeSubnet1CIDR:\n    Description: CIDR block for GWLBe subnet 1 located in the 1st Availability Zone\n    Type: String\n    Default: 10.0.14.0/24\n    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$'\n    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28\n  GWLBeSubnet2CIDR:\n    Description: CIDR block for GWLBe subnet 2 located in the 2nd Availability Zone\n    Type: String\n    Default: 10.0.24.0/24\n    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28\n  GWLBeSubnet3CIDR:\n    Description: CIDR block for GWLBe subnet 3 located in the 3rd Availability Zone\n    Type: String\n    Default: 10.0.34.0/24\n    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$'\n    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28\n  GWLBeSubnet4CIDR:\n    Description: CIDR block for GWLBe subnet 4 located in the 4th Availability Zone\n    Type: String\n    Default: 10.0.44.0/24\n    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28\n  KeyName:\n    Description: The EC2 Key Pair to allow SSH access to the instances created by this stack\n    Type: AWS::EC2::KeyPair::KeyName\n    MinLength: 1\n    ConstraintDescription: Must be the name of an existing EC2 KeyPair\n  EnableVolumeEncryption:\n    Description: Encrypt Environment instances volume with default AWS KMS key\n    Type: String\n    Default: true\n    AllowedValues:\n      - true\n      - false\n  EnableInstanceConnect:\n    Description: Enable SSH connection over AWS web console\n    Type: String\n    Default: false\n    AllowedValues:\n      - true\n      - false\n  AllowUploadDownload:\n    Description: Automatically download Blade Contracts and other important data. Improve product experience by sending data to Check Point\n    Type: String\n    Default: true\n    AllowedValues:\n      - true\n      - false\n  ManagementServer:\n    Description: The name that represents the Security Management Server in the automatic provisioning configuration\n    Type: String\n    Default: gwlb-management-server\n    MinLength: 1\n  ConfigurationTemplate:\n    Description: A name of a gateway configuration template in the automatic provisioning configuration\n    Type: String\n    Default: gwlb-ASG-configuration\n    MinLength: 1\n  AdminEmail:\n    Description: Notifications about scaling events will be sent to this email address (optional)\n    Type: String\n    Default: ''\n    AllowedPattern: '^(([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?))?$'\n  Shell:\n    Description: Change the admin shell to enable advanced command line configuration. Applies for Security Gateways and Security Management Server if deployed.\n    Type: String\n    Default: /etc/cli.sh\n    AllowedValues:\n      - /etc/cli.sh\n      - /bin/bash\n      - /bin/csh\n      - /bin/tcsh\n  GWLBName:\n    Description: Gateway Load Balancer name. This name must be unique within your AWS account and can have a maximum of 32 alphanumeric characters and hyphens. A name cannot begin or end with a hyphen.\n    Type: String\n    Default: gwlb1\n    ConstraintDescription: Must be a valid GWLB Name\n  TargetGroupName:\n    Description: Target Group Name. This name must be unique within your AWS account and can have a maximum of 32 alphanumeric characters and hyphens. A name cannot begin or end with a hyphen.\n    Type: String\n    Default: tg1\n    ConstraintDescription: Must be a valid target group name\n  CrossZoneLoadBalancing:\n    Description: Select 'true' to enable cross-az load balancing. NOTE! this may cause a spike in cross-az charges.\n    Type: String\n    Default: true\n    AllowedValues:\n      - true\n      - false\n  GatewayName:\n    Description: The name tag of the Security Gateway instances (optional)\n    Type: String\n    Default: Check-Point-Gateway\n  GatewayInstanceType:\n    Description: The EC2 instance type for the Security Gateways\n    Type: String\n    Default: c5.xlarge\n    AllowedValues:\n      - c5.large\n      - c5.xlarge\n      - c5.2xlarge\n      - c5.4xlarge\n      - c5.9xlarge\n      - c5.18xlarge\n      - c5n.large\n      - c5n.xlarge\n      - c5n.2xlarge\n      - c5n.4xlarge\n      - c5n.9xlarge\n      - c5n.18xlarge\n    ConstraintDescription: Must be a valid EC2 instance type\n  GatewaysMinSize:\n    Description: The minimal number of Security Gateways\n    Type: Number\n    Default: 2\n    MinValue: 1\n  GatewaysMaxSize:\n    Description: The maximal number of Security Gateways\n    Type: Number\n    Default: 10\n    MinValue: 1\n  GatewayVersion:\n    Description: The version and license to install on the Security Gateways\n    Type: String\n    Default: R80.40-BYOL\n    AllowedValues:\n      - R80.40-BYOL\n      - R80.40-PAYG-NGTP\n      - R80.40-PAYG-NGTX\n  GatewayPasswordHash:\n    Description: Admin user's password hash (use command \"openssl passwd -6 PASSWORD\" to get the PASSWORD's hash) (optional)\n    Type: String\n    Default: ''\n    AllowedPattern: '^[\\$\\./a-zA-Z0-9]*$'\n    NoEcho: true\n  GatewaySICKey:\n    Description: The Secure Internal Communication key creates trusted connections between Check Point components. Choose a random string consisting of at least 8 alphanumeric characters\n    Type: String\n    AllowedPattern: '^[a-zA-Z0-9]{8,}$'\n    ConstraintDescription: Secure Internal Communication activation key should contain only alpha numeric characters and be at least 8 characters long\n    NoEcho: true\n  ControlGatewayOverPrivateOrPublicAddress:\n    Description: Determines if the gateways are provisioned using their private or public address\n    Type: String\n    Default: private\n    AllowedValues:\n      - private\n      - public\n  CloudWatch:\n    Description: Report Check Point specific CloudWatch metrics\n    Type: String\n    Default: false\n    AllowedValues:\n      - true\n      - false\n  ManagementDeploy:\n    Description: Select 'false' to use an existing Security Management Server or to deploy one later and to ignore the other parameters of this section\n    Type: String\n    Default: true\n    AllowedValues:\n      - true\n      - false\n  ManagementInstanceType:\n    Description: The EC2 instance type of the Security Management Server\n    Type: String\n    Default: m5.xlarge\n    AllowedValues:\n      - m5.large\n      - m5.xlarge\n      - m5.2xlarge\n      - m5.4xlarge\n      - m5.12xlarge\n      - m5.24xlarge\n    ConstraintDescription: Must be a valid EC2 instance type\n  ManagementVersion:\n    Description: The license to install on the Security Management Server\n    Type: String\n    Default: R80.40-BYOL\n    AllowedValues:\n      - R80.40-BYOL\n      - R80.40-PAYG\n  ManagementPasswordHash:\n    Description: Admin user's password hash (use command \"openssl passwd -6 PASSWORD\" to get the PASSWORD's hash) (optional)\n    Type: String\n    Default: ''\n    AllowedPattern: '^[\\$\\./a-zA-Z0-9]*$'\n    NoEcho: true\n  GatewaysPolicy:\n    Description: The name of the Security Policy package to be installed on the gateways in the Security Gateways Auto Scaling group\n    Type: String\n    Default: Standard\n    MinLength: 1\n  AdminCIDR:\n    Description: Allow web, SSH, and graphical clients only from this network to communicate with the Security Management Server\n    Type: String\n    AllowedPattern: '^([0-9]{1,3}\\.){3}[0-9]{1,3}/([0-9]|[1-2][0-9]|3[0-2])$'\n  GatewayManagement:\n    Description: Select 'Over the internet' if any of the gateways you wish to manage are not directly accessed via their private IP address\n    Type: String\n    Default: Locally managed\n    AllowedValues:\n      - Locally managed\n      - Over the internet\n  GatewaysAddresses:\n    Description: Allow gateways only from this network to communicate with the Security Management Server\n    Type: String\n    AllowedPattern: '^([0-9]{1,3}\\.){3}[0-9]{1,3}/([0-9]|[1-2][0-9]|3[0-2])$'\nConditions:\n  4AZs: !Equals [!Ref NumberOfAZs, 4]\n  3AZs: !Or [!Equals [!Ref NumberOfAZs, 3], !Condition 4AZs]\n  DeployManagement: !Equals [!Ref ManagementDeploy, true]\n  VolumeEncryption: !Equals [!Ref EnableVolumeEncryption, true]\nResources:\n  VPCStack:\n    Type: AWS::CloudFormation::Stack\n    Properties:\n      TemplateURL: https://cgi-cfts.s3.amazonaws.com/utils/vpc.yaml\n      Parameters:\n        AvailabilityZones: !Join [',', !Ref AvailabilityZones]\n        NumberOfAZs: !Ref NumberOfAZs\n        VPCCIDR: !Ref VPCCIDR\n        PublicSubnet1CIDR: !Ref PublicSubnet1CIDR\n        PublicSubnet2CIDR: !Ref PublicSubnet2CIDR\n        PublicSubnet3CIDR: !Ref PublicSubnet3CIDR\n        PublicSubnet4CIDR: !Ref PublicSubnet4CIDR\n        CreatePrivateSubnets: false\n        CreateTgwSubnets: true\n        TgwSubnet1CIDR: !Ref TgwSubnet1CIDR\n        TgwSubnet2CIDR: !Ref TgwSubnet2CIDR\n        TgwSubnet3CIDR: !Ref TgwSubnet3CIDR\n        TgwSubnet4CIDR: !Ref TgwSubnet4CIDR\n  TgwGwlbStack:\n    Type: AWS::CloudFormation::Stack\n    Properties:\n      TemplateURL: https://cgi-cfts.s3.amazonaws.com/gwlb/tgw-gwlb.yaml\n      Parameters:\n        VPC: !GetAtt VPCStack.Outputs.VPCID\n        IGWID: !GetAtt VPCStack.Outputs.IGWID\n        AvailabilityZones: !Join [',', !Ref AvailabilityZones]\n        NumberOfAZs: !Ref NumberOfAZs\n        GatewaysSubnets: !Join\n          - ','\n          - - !GetAtt VPCStack.Outputs.PublicSubnet1ID\n            - !GetAtt VPCStack.Outputs.PublicSubnet2ID\n            - !If [3AZs, !GetAtt VPCStack.Outputs.PublicSubnet3ID, !Ref 'AWS::NoValue']\n            - !If [4AZs, !GetAtt VPCStack.Outputs.PublicSubnet4ID, !Ref 'AWS::NoValue']\n        TgwSubnet1Id: !GetAtt VPCStack.Outputs.TgwSubnet1ID\n        TgwSubnet2Id: !GetAtt VPCStack.Outputs.TgwSubnet2ID\n        TgwSubnet3Id: !If [3AZs, !GetAtt VPCStack.Outputs.TgwSubnet3ID, \"\"]\n        TgwSubnet4Id: !If [4AZs, !GetAtt VPCStack.Outputs.TgwSubnet4ID, \"\"]\n        NatGwSubnet1CIDR: !Ref NatGwSubnet1CIDR\n        NatGwSubnet2CIDR: !Ref NatGwSubnet2CIDR\n        NatGwSubnet3CIDR: !Ref NatGwSubnet3CIDR\n        NatGwSubnet4CIDR: !Ref NatGwSubnet4CIDR\n        GWLBeSubnet1CIDR: !Ref GWLBeSubnet1CIDR\n        GWLBeSubnet2CIDR: !Ref GWLBeSubnet2CIDR\n        GWLBeSubnet3CIDR: !Ref GWLBeSubnet3CIDR\n        GWLBeSubnet4CIDR: !Ref GWLBeSubnet4CIDR\n        KeyName: !Ref KeyName\n        EnableVolumeEncryption: !Ref EnableVolumeEncryption\n        EnableInstanceConnect: !Ref EnableInstanceConnect\n        AllowUploadDownload: !Ref AllowUploadDownload\n        ManagementServer: !Ref ManagementServer\n        ConfigurationTemplate: !Ref ConfigurationTemplate\n        AdminEmail: !Ref AdminEmail\n        Shell: !Ref Shell\n        GatewayName: !Ref GatewayName\n        GatewayInstanceType: !Ref GatewayInstanceType\n        GatewaysMinSize: !Ref GatewaysMinSize\n        GatewaysMaxSize: !Ref GatewaysMaxSize\n        GatewayVersion: !Ref GatewayVersion\n        GatewayPasswordHash: !Ref GatewayPasswordHash\n        GatewaySICKey: !Ref GatewaySICKey\n        ControlGatewayOverPrivateOrPublicAddress: !Ref ControlGatewayOverPrivateOrPublicAddress\n        CloudWatch: !Ref CloudWatch\n        GWLBName: !Ref GWLBName\n        TargetGroupName: !Ref TargetGroupName\n        CrossZoneLoadBalancing: !Ref CrossZoneLoadBalancing\n        ManagementDeploy: !Ref ManagementDeploy\n        ManagementInstanceType: !Ref ManagementInstanceType\n        ManagementVersion: !Ref ManagementVersion\n        ManagementPasswordHash: !Ref ManagementPasswordHash\n        GatewaysPolicy: !Ref GatewaysPolicy\n        AdminCIDR: !Ref AdminCIDR\n        GatewayManagement: !Ref GatewayManagement\n        GatewaysAddresses: !Ref GatewaysAddresses\nOutputs:\n  VPCID:\n    Description: VPC ID\n    Value: !GetAtt VPCStack.Outputs.VPCID\n  ManagementPublicAddress:\n    Description: The public address of the management server\n    Value: !GetAtt TgwGwlbStack.Outputs.ManagementPublicAddress\n    Condition: DeployManagement\n  ConfigurationTemplateName:\n    Description: The name that represents the configuration template. Configurations required to automatically provision the Gateways in the Auto Scaling Group, such as what Security Policy to install and which Blades to enable, will be placed under this template name\n    Value: !GetAtt TgwGwlbStack.Outputs.ConfigurationTemplateName\n  ControllerName:\n    Description: The name that represents the controller. Configurations required to connect to your AWS environment, such as credentials and regions, will be placed under this controller name\n    Value: !GetAtt TgwGwlbStack.Outputs.ControllerName\n  GWLBName:\n    Description: Gateway Load Balancer Name\n    Value: !Ref GWLBName\n  GWLBServiceName:\n    Description: Gateway Load Balancer Service Name\n    Value: !GetAtt TgwGwlbStack.Outputs.GWLBServiceName\n  TgwSubnet1ID:\n    Description: TGW subnet 1 ID in Availability Zone 1\n    Value: !GetAtt VPCStack.Outputs.TgwSubnet1ID\n  TgwSubnet2ID:\n    Description: TGW subnet 2 ID in Availability Zone 2\n    Value: !GetAtt VPCStack.Outputs.TgwSubnet2ID\n  TgwSubnet3ID:\n    Description: TGW subnet 3 ID in Availability Zone 3\n    Value: !GetAtt VPCStack.Outputs.TgwSubnet3ID\n    Condition: 3AZs\n  TgwSubnet4ID:\n    Description: TGW subnet 4 ID in Availability Zone 4\n    Value: !GetAtt VPCStack.Outputs.TgwSubnet4ID\n    Condition: 4AZs\n  TgwSubnet1CIDR:\n    Description: TGW subnet 1 CIDR in Availability Zone 1\n    Value: !GetAtt VPCStack.Outputs.TgwSubnet1CIDR\n  TgwSubnet2CIDR:\n    Description: TGW subnet 2 CIDR in Availability Zone 2\n    Value: !GetAtt VPCStack.Outputs.TgwSubnet2CIDR\n  TgwSubnet3CIDR:\n    Description: TGW subnet 3 CIDR in Availability Zone 3\n    Value: !GetAtt VPCStack.Outputs.TgwSubnet3CIDR\n    Condition: 3AZs\n  TgwSubnet4CIDR:\n    Description: TGW subnet 4 CIDR in Availability Zone 4\n    Value: !GetAtt VPCStack.Outputs.TgwSubnet4CIDR\n    Condition: 4AZs\n",
            "template_url": "https://cgi-cfts.s3.amazonaws.com/gwlb/tgw-gwlb-master.yaml",
            "timeout_in_minutes": 50,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTgwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_key_pair.key_TPOT"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_key_pair",
      "name": "key_TPOT",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:ap-east-1:438588710834:key-pair/FWD5 TPOT Key",
            "fingerprint": "7d:09:96:b8:90:99:ab:98:4b:5b:f9:31:e7:96:e7:87",
            "id": "FWD5 TPOT Key",
            "key_name": "FWD5 TPOT Key",
            "key_name_prefix": null,
            "key_pair_id": "key-0de7ac82e166aad2d",
            "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCvxxO1BotTtIhBBiuTbRGGrvwT/jSn3defnK+dqp0wwz92NjoFfXhmg7RgFkBmFlBY+SZRO6yrmgEulvX2FVi2/gUFTnITa7S0n4PfA0uVWV8ZuGcRGBmPtqiOtYg0MhVLRHAKcLuNiE9QCRXOad8jQTiYDMkSvG7ZkrEGknSfKfa0r/bRkiRvtoOhaINUfPecDpb0KA3n47lmSPznfMRKrCxOqjlfgQ8JIbCgYhMQ5zMtQbimNr28yERV8pvL2t9k8NK0haLEToj576Ppa6CIy3soNlyVSx0VPQsPl+XvVWiRa5PJxLY6rWMQx9cyNIXq2UbGdg6ZYPkHKRq//Z1zMu5681PyvVL9yEYxbGSrnX0gbbxsvamOO1N0AcP08WbYoSrLF40OC+Yahy7PekikqSLwuq4oofY6HMTBr1ouf0v47AI/QRfAgfxGGQB3Ty9XEvNReYcdsEgbpeFqgVTxR0NY0qeiDkPYDJHb8WmQwzm2R6FZ+LbbH5luDxrgPyJmmz2zZpkwOwV4wQsDPzNfk02Syp4+p38TCX46Wwj9jgJbd+nROUbY8OYLW5e/NyHm89x1L4dDxvRF78uzSk3SbNsInaOpBIs6xIC6yzxhteAnYOCHli2VPpabxhxijr0vBnHqq4IxAoYGu8EA5fIussCPK4y+T5BRKhQQ16lH7Q== your_email@example.com",
            "tags": null
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "setup_management",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3265946282959443754",
            "triggers": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_cloudformation_stack.checkpoint_gwlb_cloudformation_stack",
            "aws_key_pair.key_TPOT",
            "data.aws_instance.ins_management"
          ]
        }
      ]
    }
  ]
}
